@model ECommerce.Models.Company

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Companies", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Company</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CompanyId)
        @Html.HiddenFor(model=>model.Logo)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LogoFile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.LogoFile, new { @class = "form-control", @type = "file" })
                @Html.ValidationMessageFor(model => model.LogoFile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group ">
            @Html.LabelFor(model => model.DepartmentId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.DepartmentId, null, "[Select a Department..]", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CityId, null, "[Select a City..]", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-success" })
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script>
        $(document).ready(function () {
            $("#DepartmentId").change(function () {
                $("#CityId").empty();
                $("#CityId").append("<option value=>[Select a City..]</option>");
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetCities")',
                    dataType: "Json",
                    data: { DepartmentId: $("#DepartmentId").val() },
                    success: function (cities) {
                        $.each(cities, function (i,city) {
                            $("#CityId").append("<option value=" + city.CityId + ">" + city.Name + "</option>")
                        })
                    },
                    error: function (ex) {
                        alert("Error To Retrieve Cities" + ex);
                        return false;
                    }
                });
            });
            @*$("#DepartmentId").ready(function () {
                $("#CityId").empty();
                $("#CityId").append("<option value=>[Select a City..]</option>");
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetCities")',
                    dataType: "Json",
                    data: { DepartmentId: $("#DepartmentId").val() },
                    success: function (cities) {
                        $.each(cities, function (i, city) {
                            $("#CityId").append("<option value=" + city.CityId + ">" + city.Name + "</option>")
                        })
                    },
                    error: function (ex) {
                        alert("Error To Retrieve Cities" + ex);
                        return false;
                    }
                });
            });*@
        })

</script>
}
